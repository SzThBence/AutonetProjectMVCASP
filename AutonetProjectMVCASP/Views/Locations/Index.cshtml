@using Newtonsoft.Json;
@model IEnumerable<AutonetProjectMVCASP.Models.Locations>

@{
    bool LoggedIn = (User != null) && (User.Identity.IsAuthenticated);
    int counter = 1;
    string img = "image1";
}


<div class="containercontact">
    @foreach (var loc in Model)
    {
        img = "image" + counter;

        <div class="cardscontact bg-dark">
            <div id="@img" style="height: 200px;"></div>
            <div class="card__content">
                <h3 class="card__title">@loc.Place</h3>
                <div class="card__text">
                    L-V: @loc.StaryTime.Hour:00 - @loc.EndTime.Hour:00 <br />
                    S-D: Closed
                </div>
                <div class="card__info"><br /><a class="btn btn-primary" asp-controller="Locations" asp-action="Details" asp-route-place="@loc.Place">Details</a></div>
            </div>
        </div>

        counter++;
        
    }
</div>

@if (LoggedIn)
{
    <div class="card-body">
        <div class="row">
            <a class="btn btn-primary" asp-action="Create">Create New</a>
        </div>
    </div>
}

@section Scripts {
    <script>
        var locations = [];

        @{
            counter = 1;
        }

        @foreach (var loc in Model)
        {
            img = "image" + counter;
            @:locations.push({
            @:id: '@img',
            @:latitude: @loc.Latitude,
            @:longitude: @loc.Longitude,
            @:place: '@loc.Place'
            @:});
            counter++;
            
        }

            function initializeMaps() {
                locations.forEach(function (loc) {
                    var map = new google.maps.Map(document.getElementById(loc.id), {
                        center: { lat: loc.latitude, lng: loc.longitude },
                        zoom: 9
                    });

                    console.log('Map initialized for:', loc.place);

                    var marker = new google.maps.Marker({
                        position: { lat: loc.latitude, lng: loc.longitude },
                        map: map,
                        title: loc.place
                    });
                });
            }

        // Call the initialization function after the Google Maps API has loaded
        function initMap() {
            console.log('Google Maps API loaded');
            initializeMaps();
        }
    </script>

<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBT7QWZaUcL4n36Dj8toB0Tui1Ur8vmFRg&callback=initMap" async defer></script>
}
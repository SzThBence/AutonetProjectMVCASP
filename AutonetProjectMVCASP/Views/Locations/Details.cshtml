@using Newtonsoft.Json
@model AutonetProjectMVCASP.Models.Locations

@{
    ViewData["Title"] = "Details";
    var serializedData = JsonConvert.SerializeObject(Model);
}



<div class="container card card-body bg-dark text-white">
    <div class="row">
        <div class="col-lg-6 col-sm-12">
            <h4>Location</h4>
            <hr />
            <dl class="row">
                <dt class="col-sm-4">
                    @Html.DisplayNameFor(model => model.Place):
                </dt>
                <dd class="col-sm-8">
                    @Html.DisplayFor(model => model.Place)
                </dd>
                <dt class="col-sm-4">
                    @Html.DisplayNameFor(model => model.Address):
                </dt>
                <dd class="col-sm-8">
                    @Html.DisplayFor(model => model.Address)
                </dd>
                <dt class="col-sm-4">
                    @Html.DisplayNameFor(model => model.StartTime):
                </dt>
                <dd class="col-sm-8">
                    @Html.DisplayFor(model => model.StartTime)
                </dd>
                <dt class="col-sm-4">
                    @Html.DisplayNameFor(model => model.EndTime):
                </dt>
                <dd class="col-sm-8">
                    @Html.DisplayFor(model => model.EndTime)
                </dd>
                <dt class="col-sm-4">
                    @Html.DisplayNameFor(model => model.Title):
                </dt>
                <dd class="col-sm-8">
                    @Html.DisplayFor(model => model.Title)
                </dd>
                <dt class="col-sm-4">
                    @Html.DisplayNameFor(model => model.LocationEmployees)
                </dt>
                <dd class="col-sm-8">
                    @if (ViewBag.LocationEmployees != null)
                    {
                        @if (ViewBag.LocationEmployees.Count == 0)
                        {
                            <div>No employees assigned to this location</div>
                        }
                            else
                        {
                            @foreach (var employee in ViewBag.LocationEmployees)
                            {
                                <div>@employee.EmployeeId</div>
                                <!-- Display other relevant employee details as needed -->
                            }
                        }
                    }
                    
                    
                </dd>
            </dl>
        </div>
        <div class="col-lg-6 col-sm-12 align-items-center justify-content-center mt-3">
            <div class="card bg-light">
                <div class="card-body">
                    <div id="map" style="height: 400px;"></div>
                </div>

            </div>
        </div>
    </div>
    <hr />
    <div class="row text-center">
        <a class="btn btn-secondary" href='javascript:history.go(-1)'>Go Back</a>
    </div>
</div>



@section Scripts {
    <script>
        function initMap() {
            var map = new google.maps.Map(document.getElementById('map'), {
                center: { lat: @Model.Latitude, lng: @Model.Longitude },
                zoom: 9
            });

            var data = @Html.Raw(serializedData);
            var marker = new google.maps.Marker({
                position: { lat: @Model.Latitude, lng: @Model.Longitude },
                map: map,
                title: "@Model.Title"
            });
        }
    </script>

    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBT7QWZaUcL4n36Dj8toB0Tui1Ur8vmFRg&callback=initMap" async defer></script>
}

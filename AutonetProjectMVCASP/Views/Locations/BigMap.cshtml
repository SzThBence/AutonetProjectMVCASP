
@using Newtonsoft.Json;
@model IEnumerable<AutonetProjectMVCASP.Models.Locations>


@{
    ViewData["Title"] = "BigMap";
    bool LoggedIn = (User != null) && (User.Identity.IsAuthenticated);
    int counter = 1;
    string img = "image1";

}

<h1>BigMap</h1>


    <div class="containercontact">
        
            

            <div class="bigmap bg-dark">
                <h2>Map of all locations</h2>
                <div id="bigmap" style="height: 80vh;"></div>
            </div>
            
    
           

        
    </div>


<div class="row justify-content-center pt-3">
    <div class="text-center ms-2 me-2">
        @if (LoggedIn && (User.IsInRole("Admin") || User.IsInRole("Architect")))
        {
            <a asp-action="Create" class="btn btn-primary">Create New</a>
        }
        <a asp-action="Index" class="btn btn-secondary">Locations</a>
    </div>
</div>


@section Scripts {
    <script>
        var locations = [];

        @{
            counter = 1;
        }

        @foreach (var loc in Model)
        {
            img = "image" + counter;
            @:locations.push({
            @:id: '@img',
            @:latitude: @loc.Latitude,
            @:longitude: @loc.Longitude,
            @:place: '@loc.Place'
            @:});
            counter++;

        }

            function initializeMaps() {
                
                    var map = new google.maps.Map(document.getElementById('bigmap'), {
                        center: { lat: 0, lng: 0 },
                        zoom: 3
                    });

                    
                locations.forEach(function (loc) {
                    
                    var marker = new google.maps.Marker({
                        position: { lat: loc.latitude, lng: loc.longitude },
                        map: map,
                        title: loc.place,
                                label: {
                            text: loc.place,
                            color: 'white', // Label text color
                            fontSize: '14px', // Label font size
                            fontWeight: 'bold' // Label font weight
                            //anchor: new google.maps.Point(0.5, -20) // Adjust the y-coordinate (-20) to position the labe
                        }
                    });

                    var infowindow = new google.maps.InfoWindow({
                        content: loc.place, // Display the place name as the label
                        color: 'black'
                    });

                    marker.addListener('click', function () {
                        window.location.href = '/Locations/Details?place=' + encodeURIComponent(loc.place);
                    });
                    
                    console.log('Map initialized for:', loc.place);
                });


            }

        // Call the initialization function after the Google Maps API has loaded
        function initMap() {
            console.log('Google Maps API loaded');
            initializeMaps();
        }
    </script>

    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBT7QWZaUcL4n36Dj8toB0Tui1Ur8vmFRg&callback=initMap" async defer></script>
}